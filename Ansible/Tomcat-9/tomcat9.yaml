---
- name: Install Tomcat-9
  become: yes
  hosts: web
  vars:
    # tomcat_user: tomcat
    # tomcat_home_directory: /opt/tomcat
    # tomcat_shell_directory: /bin/false
    # tomcat_url: https://dlcdn.apache.org/tomcat/tomcat-9/v9.0.65/bin/apache-tomcat-9.0.65.tar.gz
    # tomcat_service_file_location: /etc/systemd/system/tomcat.service
    # tomcat_users_file_location: /opt/tomcat/latest/conf/tomcat-users.xml
    # tomcat_manager_app_file_location: /opt/tomcat/latest/webapps/manager/META-INF/context.xml
    # tomcat_host_manager_app_file_location: /opt/tomcat/latest/webapps/host-manager/META-INF/context.xml
    # ansible_username: rowdy
    # ansible_password: boyz
    # all_hosts: ".*"
  tasks:
    - name: Fail on Unsupported OS
      ansible.builtin.fail:
        msg: "This Playbook supports only Ubuntu and CentOs"
      when:
        - ansible_facts["distribution"] != "Ubuntu"
        - ansible_facts["distribution"] != "CentOS"

    - ansible.builtin.debug:
        msg: "Installing Java {{ java_package }} on Ubuntu"
    - name: Install Java 11
      ansible.builtin.package:
        name: "{{ java_package }}"
        update_cache: yes
        state: present
      when:
        - ansible_facts["distribution"]== "Ubuntu"

    - ansible.builtin.debug:
        msg: "Installing Java {{ java_package }} on CentOs"
    - name: Install Java 11
      ansible.builtin.package:
        name: "{{ java_package }}"
        update_cache: yes
        state: present
      when:
        - ansible_facts["distribution"]== "CentOS"  

    - ansible.builtin.debug:
        msg: "Creating {{ tomcat_user }} in {{ tomcat_home_directory }} and {{ tomcat_shell_directory }}"
    - name: Create Tomcat User
      ansible.builtin.user:
        name: "{{ tomcat_user }}"
        home: "{{ tomcat_home_directory }}"
        shell: "{{ tomcat_shell_directory }}"
    
    - ansible.builtin.debug:
        msg: "Downloading Tomcat9 from {{ tomcat_url }} to /tmp"
    - name: Download Tomcat 9
      ansible.builtin.get_url:
        dest: /tmp
        url: "{{ tomcat_url }}"
      notify:
        - UnZip Tomcat .tar.gz file

    - name: Flush Handlers  
      meta: flush_handlers
    
    - ansible.builtin.debug:
        msg: "Creating Symbolic link from {{ tomcat_home_directory }}/apache-tomcat-9.0.65 to {{ tomcat_home_directory }}/latest with owner as {{ tomcat_user }}"
    - name: Create Symbolic link
      ansible.builtin.file:
        src: "{{ tomcat_home_directory }}/apache-tomcat-9.0.65"
        dest: "{{ tomcat_home_directory }}/latest"
        owner: "{{ tomcat_user }}"
        group: "{{ tomcat_user }}"
        state: link
    
    - ansible.builtin.debug:
        msg: "Changing the ownership of {{ tomcat_home_directory }} from root to {{ tomcat_user }}"
    - name: Recursively change ownership of a directory
      ansible.builtin.file:
        path: "{{ tomcat_home_directory }}"
        recurse: yes
        owner: "{{ tomcat_user }}"
        group: "{{ tomcat_user }}"
        state: directory

    - ansible.builtin.debug:
        msg: "Giving Executable Permissions to all the shell scripts present in {{ tomcat_home_directory }}/latest/bin/*.sh"
    - name: Give Executable Permissions to all shell scripts
      ansible.builtin.file:
        path: "{{ item }}"
        mode: "+x"
      with_fileglob:
        - "{{ tomcat_home_directory }}/latest/bin/*.sh"

    - name: Copy Tomcat Service file
      ansible.builtin.template:
        src: tomcat.service.j2
        dest: "{{ tomcat_service_file_location }}"

    - name: Start Tomcat Service
      ansible.builtin.systemd:
        name: tomcat.service
        daemon_reload: yes
        enabled: yes
        state: started

    - name: Copy Users file
      ansible.builtin.template:
        src: tomcat-users.xml.j2
        dest: "{{ tomcat_users_file_location }}"
      notify:
        - restart Tomcat-9 Service

    - name: Copy manager-app context file
      ansible.builtin.template:
        src: context.xml.j2
        dest: "{{ tomcat_manager_app_file_location }}"
      notify:
        - restart Tomcat-9 Service

    - name: Copy host-manager-app context file
      ansible.builtin.template:
        src: context.xml.j2
        dest: "{{ tomcat_host_manager_app_file_location }}"
      notify:
        - restart Tomcat-9 Service

  handlers:
    - name: restart Tomcat-9 Service
      ansible.builtin.systemd:
        name: tomcat.service
        state: restarted

    - name: UnZip Tomcat .tar.gz file
      ansible.builtin.unarchive:
        src: /tmp/apache-tomcat-9.0.65.tar.gz
        dest: "{{ tomcat_home_directory }}"
        remote_src: yes